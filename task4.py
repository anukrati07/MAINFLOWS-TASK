# -*- coding: utf-8 -*-
"""TASK4

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JMLN53h-B7IDWNvXd2ECnkNh9N2NW-YE
"""

import pandas as pd
import numpy as np
import random
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler, OneHotEncoder, LabelEncoder
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

df = pd.read_csv('/content/house_prices.csv')

df.head(5)

df.info()

df.describe()

df.isnull().sum()

df.dropna(inplace= True)

df.hist(figsize=(10,5))

numeric_cols = df.select_dtypes(include=['number']).columns
Q1 = df[numeric_cols].quantile(0.25)
Q3 = df[numeric_cols].quantile(0.75)
IQR = Q3 - Q1
outliers = ((df[numeric_cols] < (Q1 - 1.5 * IQR)) | (df[numeric_cols] > (Q3 + 1.5 * IQR))).sum()
print("Outliers in dataset:")
print(outliers)

# Normalize numerical features
scaler = MinMaxScaler()
df[['Size', 'Number_of_Rooms']] = scaler.fit_transform(df[['Size', 'Number_of_Rooms']])

# Encode categorical features
encoder = OneHotEncoder(sparse_output=False)
encoded_location = encoder.fit_transform(df[['Location']])
encoded_location_df = pd.DataFrame(encoded_location, columns=encoder.get_feature_names_out(['Location']))
df = pd.concat([df, encoded_location_df], axis=1).drop('Location', axis=1)

# Feature selection
correlation_matrix = df.corr()
print(correlation_matrix['Price'].sort_values(ascending=False))  # Correlation with price

# Train-test split
X = df.drop('Price', axis=1)
y = df['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Model evaluation
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)
print(f"RMSE: {rmse}")
print(f"RÂ² Score: {r2}")